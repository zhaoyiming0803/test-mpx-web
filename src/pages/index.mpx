<template>
  <view>
    <view wx:class="{active: isActive}" bindtap="switchActiveStatus">this is index.mpx!!!!!!!!</view>
    <view>
      <button bindtap="toListPage">去列表页</button>
      <button bindtap="toPackageACat">去A分包Cat页</button>
      <button bindtap="toPackageBDog">去B分包Dog页</button>
      <button bindtap="scrollToSelector">scroll to #selector</button>
      <button bindtap="startPullDown">开始下拉刷新</button>
      <button bindtap="stopPullDown">停止下拉刷新</button>
    </view>
    <view wx:if="{{__mpx_mode__ === 'wx'}}">
      <mp-icon icon="play" color="black" size="{{25}}" bindtap="showDialog"></mp-icon>
      <mp-dialog title="test" show="{{dialogShow}}" bindbuttontap="tapDialogButton" buttons="{{buttons}}">
        <view>test content</view>
      </mp-dialog>
    </view>
    <view>
      <mpx-button>button1</mpx-button>
      <mpx-button>button2</mpx-button>
    </view>
    <view class="test-container">
      <view>{{ dialogShow }}</view>
      <view>{{ showOneButtonDialog }}</view>
      <view wx:if="{{ isActive }}">{{ list }}</view>
    </view>
    <view class="test-container" id="selector"></view>
    <!-- <button loading="{{ true }}" bindtap="clickButton">this is mpx button</button>
    <icon type="success" color="red"></icon> -->
    <view class="hello" bindtap="toPackageACat">hello world</view>
  </view>
</template>

<script>
  import mpx, { createPage } from '@mpxjs/core'
  console.log('index app: ', getApp())
  console.log('apiProxy: ', mpx.request)
  createPage({
    options: {
      aaa: 123
    },
    data: {
      pageName: 'index',
      dialogShow: false,
      showOneButtonDialog: false,
      buttons: [{text: '取消'}, {text: '确定'}],
      isActive: true,
      list: '12345'
    },
    created () {
      // console.log('this.$options: ', this.$options)
      // console.log('this.options: ', this.$options.options) 
    },
    onPageScroll (e) {
      console.log('onPageScroll: ', e)
    },
    onPullDownRefresh: function () {
      console.log('onPullDownRefresh')
    },
    onReachBottom: function () {
      console.log('onReachBottom: ', this.buttons)
    },
    methods: {
      toListPage () {
        wx.navigateTo({
          url: '/pages/list',
          success: res => {
            console.log('res: ', res)
          }
        })
      },
      toPackageACat () {
        wx.navigateTo({
          url: '/packageA/cat'
        })
      },
      toPackageBDog () {
        wx.navigateTo({
          url: '/packageB/dog'
        })
      },
      tapDialogButton () {
        this.dialogShow = false
        this.showOneButtonDialog = false
      },
      showDialog () {
        this.dialogShow = true
      },
      switchActiveStatus () {
        this.isActive = !this.isActive
      },
      clickButton () {},
      scrollToSelector () {
        wx.pageScrollTo({
          // scrollTop: 0,
          selector: '#selector',
          duration: 4000,
          success: function (params) {
            console.log('success: ', params)
          },
          complete: function (params) {
            console.log('complete: ', params)
          }
        })
      },
      startPullDown () {
        wx.startPullDownRefresh()
      },
      stopPullDown () {
        wx.stopPullDownRefresh()
      }
    }
  })
</script>

<script name="json">
  const wxComponents = {
    // "mp-icon": "weui-miniprogram/icon/icon",
    // "mp-dialog": "weui-miniprogram/dialog/dialog"
  }
  module.exports = {
    "usingComponents": __mpx_mode__ === 'wx' 
      ? Object.assign({}, wxComponents)
      : {
        // "mpx-button": "@mpxjs/webpack-plugin/lib/runtime/components/web/mpx-button.vue"
        // "mpx-navigation-bar": "@mpxjs/webpack-plugin/lib/runtime/components/web/mpx-navigation-bar.vue"
      },
    "navigationBarTitleText": "首页123",
    "navigationBarBackgroundColor": "#ccc",
    "navigationBarTextStyle": "white",
    // "backgroundColor": "yellow",
    "backgroundTextStyle": "dark",
    "enablePullDownRefresh": true,
    "disableScroll": false
    // "abc": 123
  }
</script>

<style lang="stylus">
.test-container {
  margin-bottom 20px
  width: 100%
  height 1000px
  background-color red
}
.hello {
  position: fixed
  top: 0;
  left: 0;
  width: 100px;
  height: 100px;
  background: blue;
}
</style>
